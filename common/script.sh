#!/bin/bash

# D√©finir les variables globales
THRESHOLD_MEMORY=80  # Seuil critique de la m√©moire (en pourcentage)
THRESHOLD_SPACE=80  # Seuil critique d'espace disque (en pourcentage)

# Arr√™ter √† la moindre erreur
# set -e # This will be in the main script or individual updater scripts if needed per function

# Fonction pour v√©rifier la connectivit√© Internet
check_internet() {
    echo -e "\e[34müåê V√©rification de la connexion Internet...\e[0m"
    if wget -q --spider http://google.com; then
        echo -e "\e[32m‚úÖ Connexion Internet d√©tect√©e.\e[0m"
        return 0
    else
        echo -e "\e[31m‚ùå Aucune connexion Internet d√©tect√©e. Veuillez v√©rifier votre r√©seau.\e[0m"
        return 1
    fi
}

check_success() {
    local status=$?
    local message="$1"
    local tolerate_failure="$2"  # peut √™tre "true" ou vide

    if [ $status -eq 0 ]; then
        echo -e "\e[32m‚úÖ $message r√©ussi.\e[0m"
    else
        if [ "$tolerate_failure" = "true" ]; then
            echo -e "\e[33m‚ö†Ô∏è $message partiellement √©chou√©, mais on continue...\e[0m"
        else
            echo -e "\e[31m‚ùå $message √©chou√©. V√©rifiez les erreurs et votre connexion internet.\e[0m"
            exit 1
        fi
    fi
}


# Fonction pour d√©tecter le syst√®me d'exploitation
detect_os() {
    if [ -f /etc/os-release ]; then
        # Lecture du fichier os-release pour identifier le syst√®me
        grep ^ID= /etc/os-release | cut -d= -f2 | tr -d '"' | tr '[:upper:]' '[:lower:]'
    elif type lsb_release >/dev/null 2>&1; then
        lsb_release -is | tr '[:upper:]' '[:lower:]'
    else
        # Si os-release n'existe pas, fallback sur uname
        uname -s | tr '[:upper:]' '[:lower:]'
    fi
}

# Fonction pour les prompts Oui/Non
prompt_yes_no() {
    while true; do
        read -p "$1 (O/N): " response
        case "$response" in
            [Oo]* ) return 0;; # Success (Yes)
            [Nn]* ) return 1;; # Failure (No)
            * ) echo -e "\e[31m‚ùå R√©ponse non valide. Veuillez taper O ou N.\e[0m";;
        esac
    done
}

# Common functions and variables will go here 
